<?php

include_once("opentools.features.inc");

/*
 * Get the context's Forum term.
 */

function opentools_init() {
 // drupal_add_css(drupal_get_path('module', 'opentools') . '/css/opentools.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
  
  if(arg(0) != 'admin' && arg(2) != 'edit') {
    drupal_add_css(drupal_get_path('module', 'opentools') . '/css/opentools.css');
  }

  // Reroute Wiki pages 
  if(arg(0) == "node" && is_numeric(arg(1)) && arg(2) != 'edit' && arg(2) != 'revisions') {
    $node = node_load(arg(1));
    if ($node->type == "wiki") {
      $context = opentools_get_context($node, 'node');
      if(is_array($context) && $parent = $context["parent"]["object"]) {
        drupal_goto(drupal_get_path_alias("taxonomy/term/$parent->tid"), array("fragment" => "wiki"));
      }
    }
  } 
  
  // Reroute Forum pages
  if(arg(0) == "forum" && is_numeric(arg(1)) && arg(2) != 'edit') {
    $term = taxonomy_term_load(arg(1));
    $context = opentools_get_context($term, 'term');
    if(is_array($context) && $parent = $context["parent"]["object"]) {
      drupal_goto(drupal_get_path_alias("taxonomy/term/$parent->tid"), array('fragment'=> "forum"));
    }
  } 
}

function opentools_taxonomy_term_insert($term){
  if($term->vocabulary_machine_name == 'tools') {
    // Create a wiki page
    // Example from http://drupal.org/node/889058#comment-3709802
    $wiki = new StdClass();
    $wiki->title = $term->name;
    $wiki->type = 'wiki';
    $wiki->language = LANGUAGE_NONE;
    node_object_prepare($wiki);
    /*
    $node->body[$node->language][0]['value']   = $body_text;
    $node->body[$node->language][0]['summary'] = text_summary($body_text);
    $node->body[$node->language][0]['format']  = 2;
    */
    node_save($wiki);
    dpm($wiki);
    // Create a forum
    $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'forums'")->fetchField();
    
    $forum = (object) array(
      'name' => $term->name,
      'vid' => $vid,
      'parent' => array(2)
    );
    taxonomy_term_save($forum);
    dpm($forum); 
    // Save the tool with references to the new wiki page and forum 
    $term->field_tool_to_wiki['und'][0]['target_id'] = $wiki->nid;
    $term->field_tool_to_forum['und'][0]['tid'] = $forum->tid;
    
    taxonomy_term_save($term);
  }

}

function opentools_form_alter(&$form, &$form_state, $form_id) {
  // Hide unnecessary form items
  if($form_id == "taxonomy_form_term" && $form['#vocabulary']->machine_name == 'tools') {
   $form['field_tool_to_wiki']['#type'] = 'hidden';
   $form['field_tool_to_forum']['#type'] = 'hidden';
   $form['description']['#type'] = 'hidden';
   $form['relations']['#type'] = 'hidden';
  }

}

/*
 * "context" here refers to what Forum and Wiki page are relevant to a given
 * object.  For example, we may be currently viewing a Forum Topic node, which
 * belongs to a Forum term, which may have an Event or Tool pointing at it, and
 * that Tool or Event is pointing at a particular Forum term and Wiki node
 * which is relevant and IS our context.
 * 
 * @return Array of Forum TID and Wiki NID relevant to the current context.
 *  . 
 */ 

function opentools_get_context($object = NULL, $object_type = NULL) {
 
  $context = array(
    "parent" => array(
      "id" => NULL,
      "type" => NULL,
      "object" => NULL
    ),
    "forum" => NULL,
    "wiki" => NULL
  );
  
  // Try to figure out the current object if none was given.
  
  // We are in a Forum
  if(!$object && arg(0) == 'forum' && is_numeric(arg(1))) {
    // Too soon $context['forum'] = arg(1);
    $object = taxonomy_term_load(arg(1));
    $object_type = "term";
  }
  // We are on a taxonomy term page
  elseif (!$object && arg(0) == 'taxonomy' && arg(1) == "term" && is_numeric(arg(2))) {
    $object = menu_get_object('taxonomy_term', 2);
    $object_type = "term";
  }
  // We are on a node
  elseif (!$object && arg(0) == 'node' && is_numeric(arg(1))) {
    $object = node_load(arg(1));
    $object_type = "node";
    // If we are on a Topic Node, we actually want the parent Forum term.
    if ($object->type == "forum_topic") {
      $object = taxonomy_term_load($object->taxonomy_forums['und'][0]['tid']);
      $object_type = "term";
    }
  }

  // Try to figure the object type if we don't have it yet.
  
  if ($object && !$object_type) {
    if (property_exists($object, "vocabulary_machine_name")) {
      $object_type = "term";
    }
    elseif (property_exists($object, "type")) {
      $object_type = "node";
    }
  }
  
  // Now get the $context
  
  // If $object is a taxonomy term
  // ------ NOTE!! EVERYTHING ENDS ITS RUN HERE WITH THE OBJECT EITHER  -----
  // ------ BEING AN EVENT OR A TOOL.                                   -----
  if ($object && $object_type == "term") {
    switch ($object->vocabulary_machine_name) {
      case "events" :
        $context["forum"] = $object->field_events_to_forum['und'][0]['tid'];
        $context["wiki"] = $object->field_event_to_wiki['und'][0]['target_id'];
        $context["parent"]["id"] = $object->tid;
        $context["parent"]["object"] = $object;
        $context["parent"]["type"] = "term";
        break;
      case "tools" :
        $context["forum"] = $object->field_tool_to_forum['und'][0]['tid'];
        $context["wiki"] = $object->field_tool_to_wiki['und'][0]['target_id'];
        $context["parent"]["id"] = $object->tid;
        $context["parent"]["object"] = $object;
        $context["parent"]["type"] = "term";        
        break;
      case "forums" :
        $parent_object = opentools_get_forum_parent($object);
        if ($parent_object) {
          $context = opentools_get_context($parent_object);
        } 
        // No parent? Then this forum is the end of the line.
        // @todo There is a bug around here somewhere. When viewing contextual links
        // on Forum nodes under Forum Terms that do not have parents, the results are
        // REALLY weird.
        else {
          $context["forum"] = $object->tid;
        }  
        break;
    }
  }
  // If $object is a node
  elseif($object && $object_type == "node") {
    switch ($object->type) {
      case "wiki" :
        // Find the Event or Tool that relates to this wiki page
        $parent_object = opentools_get_wiki_parent($object);
        $context = opentools_get_context($parent_object, "term");
        break;
      case "forum" :
        $parent_object = opentools_get_forum_parent(taxonomy_term_load($object->taxonomy_forums['und'][0]['tid']));
        if($parent_object) {
          $context = opentools_get_context($parent_object);
        }
        break;
    }
  }
  
  return $context;
}

/*
 * @todo
 */
function opentools_get_forum_parent($term) {
  $tid = $term->tid; 
  // Check all Tools
  $sql = "SELECT taxonomy_term_data.name AS taxonomy_term_data_name, taxonomy_term_data.vid AS taxonomy_term_data_vid, taxonomy_term_data.tid AS tid, taxonomy_vocabulary.machine_name AS taxonomy_vocabulary_machine_name
  FROM 
  {taxonomy_term_data} taxonomy_term_data
  LEFT JOIN {field_data_field_tool_to_forum} field_data_field_tool_to_forum ON taxonomy_term_data.tid = field_data_field_tool_to_forum.entity_id AND (field_data_field_tool_to_forum.entity_type = 'taxonomy_term' AND field_data_field_tool_to_forum.deleted = '0')
  LEFT JOIN {taxonomy_vocabulary} taxonomy_vocabulary ON taxonomy_term_data.vid = taxonomy_vocabulary.vid
  WHERE (( (field_data_field_tool_to_forum.field_tool_to_forum_tid = '$tid' ) ))";
  $results = db_query($sql);
  foreach($results as $result) {
    return taxonomy_term_load($result->tid);
  }
  // Check all Events
  $sql = "SELECT taxonomy_term_data.name AS taxonomy_term_data_name, taxonomy_term_data.vid AS taxonomy_term_data_vid, taxonomy_term_data.tid AS tid, taxonomy_vocabulary.machine_name AS taxonomy_vocabulary_machine_name
  FROM 
  {taxonomy_term_data} taxonomy_term_data
  LEFT JOIN {field_data_field_events_to_forum} field_data_field_events_to_forum ON taxonomy_term_data.tid = field_data_field_events_to_forum.entity_id AND (field_data_field_events_to_forum.entity_type = 'taxonomy_term' AND field_data_field_events_to_forum.deleted = '0')
  LEFT JOIN {taxonomy_vocabulary} taxonomy_vocabulary ON taxonomy_term_data.vid = taxonomy_vocabulary.vid
  WHERE (( (field_data_field_events_to_forum.field_events_to_forum_tid = '$tid' ) ))";
   $results = db_query($sql);
  foreach($results as $result) {
    return taxonomy_term_load($result->tid);
  }
  
}

/*
 * @todo
 */
function opentools_get_wiki_parent($node) {
  $nid = $node->nid;
  // Check all Tools
  $sql = "SELECT taxonomy_term_data.name AS taxonomy_term_data_name, taxonomy_term_data.vid AS taxonomy_term_data_vid, taxonomy_term_data.tid AS tid, taxonomy_vocabulary.machine_name AS taxonomy_vocabulary_machine_name
  FROM 
  {taxonomy_term_data} taxonomy_term_data
  LEFT JOIN {taxonomy_vocabulary} taxonomy_vocabulary ON taxonomy_term_data.vid = taxonomy_vocabulary.vid
  LEFT JOIN {field_data_field_tool_to_wiki} field_data_field_tool_to_wiki ON taxonomy_term_data.tid = field_data_field_tool_to_wiki.entity_id AND (field_data_field_tool_to_wiki.entity_type = 'taxonomy_term' AND field_data_field_tool_to_wiki.deleted = '0')
  WHERE (( (taxonomy_vocabulary.machine_name IN  ('tools')) AND (field_data_field_tool_to_wiki.field_tool_to_wiki_target_id = '$nid' ) ))";
  $results = db_query($sql);
  foreach($results as $result) {
    return taxonomy_term_load($result->tid);
  }

  // Check all Events
  $sql = "SELECT taxonomy_term_data.name AS taxonomy_term_data_name, taxonomy_term_data.vid AS taxonomy_term_data_vid, taxonomy_term_data.tid AS tid, taxonomy_vocabulary.machine_name AS taxonomy_vocabulary_machine_name
  FROM 
  {taxonomy_term_data} taxonomy_term_data
  LEFT JOIN {field_data_field_event_to_wiki} field_data_field_event_to_wiki ON taxonomy_term_data.tid = field_data_field_event_to_wiki.entity_id AND (field_data_field_event_to_wiki.entity_type = 'taxonomy_term' AND field_data_field_event_to_wiki.deleted = '0')
  LEFT JOIN {taxonomy_vocabulary} taxonomy_vocabulary ON taxonomy_term_data.vid = taxonomy_vocabulary.vid
  WHERE (( (field_data_field_event_to_wiki.field_event_to_wiki_target_id = '$nid' ) ))";
  $results = db_query($sql);
  foreach($results as $result) {
    return taxonomy_term_load($result->tid);
  }

} 


function opentools_get_forum_context_ancestry($tid = NULL) {
  $ancestry = array();
  // Get parent's ancestry
  if (is_numeric($tid)) {
    $parents = taxonomy_get_parents($tid);
    foreach ($parents as $parent) {
      $ancestry[] = $parent->tid;
    }
  } 
  else {
    $ancestry = NULL;
  }
  return $ancestry;
}
